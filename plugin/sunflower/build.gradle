apply plugin: 'com.android.application'

apply from: '../shadow.gradle' // 配置 plugin flavor 后 shadow plugin 使用需在 android{} 闭包 和 kotlin-android 插件之前

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdk 31
    defaultConfig {
        applicationId 'com.google.samples.apps.sunflower'
        minSdkVersion 21
        targetSdkVersion 30
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode 1
        versionName "0.1.6"
        vectorDrawables.useSupportLibrary true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.create("release")
            signingConfig.initWith(buildTypes.debug.signingConfig)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // work-runtime-ktx 2.1.0 and above now requires Java 8
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures{
        dataBinding true
    }

    // 将插件 applicationId 设置为和宿主相同
    productFlavors {
        plugin {
            applicationId HOST_APP_APPLICATION_ID
        }
    }

    // 将插件的资源ID分区改为和宿主0x7F不同的值
    aaptOptions {
        additionalParameters "--package-id", "0x7E", "--allow-reserved-package-id"
    }
}

ext{
    appCompatVersion = '1.1.0-beta01'
    constraintLayoutVersion = '2.0.0-beta4'
    coreTestingVersion = '2.0.0'
    coroutinesVersion = "1.3.0-M2"
    espressoVersion = '3.1.1'
    fragmentVersion = '1.1.0-alpha09'
    glideVersion = '4.9.0'
    gradleVersion = '3.5.1'
    gsonVersion = '2.8.2'
    junitVersion = '4.12'
    kotlinVersion = kotlin_version
    ktlintVersion = '0.33.0'
    ktxVersion = '1.0.2'
    lifecycleVersion = '2.2.0-alpha01'
    materialVersion = '1.1.0-alpha09'
    navigationVersion = '2.3.5'
    recyclerViewVersion = '1.1.0-alpha05'
    roomVersion = '2.3.0'
    runnerVersion = '1.0.1'
    truthVersion = '0.42'
    testExtJunit = '1.1.0'
    uiAutomatorVersion = '2.2.0'
    viewPagerVersion = '1.0.0'
    workVersion = '2.1.0'
}

dependencies {
    kapt "androidx.room:room-compiler:$roomVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.core:core-ktx:$ktxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.viewpager2:viewpager2:$viewPagerVersion"
    implementation "androidx.work:work-runtime-ktx:$workVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    // Testing dependencies
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.ext:junit:$testExtJunit"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiAutomatorVersion"
    androidTestImplementation "androidx.work:work-testing:$workVersion"
    androidTestImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "junit:junit:$junitVersion"

    //Shadow Transform后业务代码会有一部分实际引用runtime中的类
    //如果不以compileOnly方式依赖，会导致其他Transform或者Proguard找不到这些类
    pluginCompileOnly "com.tencent.shadow.core${group_suffix}:runtime:$shadow_version"
}